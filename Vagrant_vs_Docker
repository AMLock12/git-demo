Vagrant vs Docker

Vagrant and Docker are both very similar in their goal of trying to provide a streamlined environment workflow across different operating systems. According to the lectures, Vagrant is “an Open-source software product for building and maintaining portable virtual development environments”. It helps provide a lightweight service for virtual environment maintenance and will help manage all necessary configurations for developers.  Docker is also an open-source container technology that allows a user to start new apps on older servers and develop, ship, and run applications quickly. Docker can be made very secure and use a containerized approach to run applications while Vagrant uses Virtual environments to deploy.  Vagrant allows users to mirror the operating system by using virtualization software as a wrapper to assist and automate developer interaction.  It is described as virtualization automation.  Docker containers provide lightweight containers that have everything needed to run an application within a container and allow there to be no risk of interference between the applications. Vagrant requires more resources because it spins up an entire virtual machine while Docker just uses containers to deploy applications, resulting in less overhead.  
I do not have much experience with Docker or Vagrant but overall I preferred setting up Vagrant but working with Docker. I had an easier time installing it and ran into fewer configuration issues than I did with Docker. However, for organizational sake and ease of boot-up, Docker was easier to manage and understand than Vagrant. Once I got Vagrant booted up I struggled to understand what to do next. Because I had a harder time understanding Vagrant I had to do a bit of research to put into words the differences between docker and Vagrant. Dockers seemed easier to work with when it came to utilizing resources. All I had to do was install docker on the VM and boot it up and work from there. Vagrant seemed to use more time and space to set up, and start, and was much larger in size.  
References:
Module 7 lectures 
Module 3 lectures
https://keyua.org/blog/docker-vs-vagrant-for-development/
